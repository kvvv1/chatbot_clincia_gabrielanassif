#!/usr/bin/env python3
"""
Configurador Local Z-API
========================

Script para configurar as vari√°veis de ambiente do Z-API localmente
para permitir testes da API.

Uso: python configurar_zapi_local.py
"""

import os
import sys
from datetime import datetime

def configurar_zapi_local():
    """Configura as vari√°veis do Z-API localmente"""
    print("üîß CONFIGURANDO Z-API LOCALMENTE")
    print("=" * 50)
    print(f"‚è∞ {datetime.now().strftime('%H:%M:%S')}")
    print()
    
    # Credenciais do Z-API (do arquivo vercel.env.example)
    zapi_config = {
        'ZAPI_INSTANCE_ID': 'VARIABLE_FROM_ENV',
        'ZAPI_TOKEN': 'VARIABLE_FROM_ENV',
        'ZAPI_CLIENT_TOKEN': 'VARIABLE_FROM_ENV',
        'ZAPI_BASE_URL': 'https://api.z-api.io'
    }
    
    # Configurar vari√°veis de ambiente
    for key, value in zapi_config.items():
        os.environ[key] = value
        print(f"‚úÖ {key}: {'*' * len(value[:10])}...")
    
    print()
    print("üéâ CONFIGURA√á√ÉO CONCLU√çDA!")
    print("As vari√°veis do Z-API foram configuradas para esta sess√£o.")
    print()
    print("üìã Para testar, execute:")
    print("   python test_zapi_rapido.py")
    print()
    print("‚ö†Ô∏è  NOTA: Estas configura√ß√µes s√£o apenas para esta sess√£o.")
    print("   Para configura√ß√£o permanente, crie um arquivo .env")
    
    return True

def criar_arquivo_env():
    """Cria arquivo .env com as configura√ß√µes"""
    print("üìÑ CRIANDO ARQUIVO .env")
    print("=" * 30)
    
    env_content = """# Configura√ß√µes Z-API
ZAPI_INSTANCE_ID=VARIABLE_FROM_ENV
ZAPI_TOKEN=VARIABLE_FROM_ENV
ZAPI_CLIENT_TOKEN=VARIABLE_FROM_ENV
ZAPI_BASE_URL=https://api.z-api.io

# Outras configura√ß√µes
ENVIRONMENT=development
DEBUG=True
"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        
        print("‚úÖ Arquivo .env criado com sucesso!")
        print("üìÅ Localiza√ß√£o: .env")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao criar arquivo .env: {str(e)}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üöÄ CONFIGURADOR Z-API")
    print("=" * 30)
    print("1. Configurar para esta sess√£o")
    print("2. Criar arquivo .env permanente")
    print("3. Ambos")
    print()
    
    try:
        opcao = input("Escolha uma op√ß√£o (1-3): ").strip()
        
        if opcao == "1":
            configurar_zapi_local()
        elif opcao == "2":
            criar_arquivo_env()
        elif opcao == "3":
            configurar_zapi_local()
            print()
            criar_arquivo_env()
        else:
            print("‚ùå Op√ß√£o inv√°lida!")
            return False
        
        print()
        print("üéâ Configura√ß√£o conclu√≠da!")
        return True
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è Opera√ß√£o cancelada")
        return False
    except Exception as e:
        print(f"\nüí• Erro: {str(e)}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 