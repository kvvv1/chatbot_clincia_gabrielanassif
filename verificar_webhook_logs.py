#!/usr/bin/env python3
"""
üîç VERIFICADOR DE LOGS DO WEBHOOK
Verifica se o webhook est√° recebendo e processando mensagens
"""

import requests
import json
import time

def verificar_webhook_logs():
    """Verifica os logs do webhook"""
    print("üîç VERIFICANDO LOGS DO WEBHOOK")
    print("=" * 50)
    
    # URLs do webhook
    webhook_urls = [
        "https://chatbot-clincia.vercel.app/webhook",
        "https://chatbot-clincia.vercel.app/webhook/message",
        "https://chatbot-clincia.vercel.app/webhook/status",
        "https://chatbot-clincia.vercel.app/webhook/connected",
        "https://chatbot-clincia.vercel.app/webhook/health"
    ]
    
    print("üìã TESTANDO ENDPOINTS DO WEBHOOK:")
    
    for url in webhook_urls:
        try:
            response = requests.get(url, timeout=10)
            print(f"   {url}: {response.status_code}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    print(f"      ‚úÖ Resposta: {json.dumps(data, indent=2)}")
                except:
                    print(f"      ‚úÖ Resposta: {response.text[:100]}...")
            else:
                print(f"      ‚ùå Erro: {response.text}")
                
        except Exception as e:
            print(f"   {url}: ‚ùå Erro - {str(e)}")
    
    print(f"\nüîß DIAGN√ìSTICO DO PROBLEMA:")
    print(f"   ‚úÖ Mensagem enviada com sucesso")
    print(f"   ‚ùå Webhook n√£o processa mensagens recebidas")
    print(f"   üîç Poss√≠veis causas:")
    print(f"      1. Webhook n√£o est√° recebendo eventos do Z-API")
    print(f"      2. Configura√ß√£o de webhook incorreta")
    print(f"      3. Problema no c√≥digo do webhook")
    print(f"      4. Eventos n√£o ativados no Z-API")
    
    print(f"\nüîç VERIFICA√á√ïES NECESS√ÅRIAS:")
    print(f"   1. Verificar se o webhook est√° configurado corretamente no Z-API")
    print(f"   2. Verificar se todos os eventos est√£o ativados")
    print(f"   3. Verificar logs no painel do Vercel")
    print(f"   4. Testar com uma mensagem simples")
    
    print(f"\nüìä PR√ìXIMOS PASSOS:")
    print(f"   1. Acesse: https://vercel.com/dashboard")
    print(f"   2. Selecione o projeto 'chatbot-clinica'")
    print(f"   3. V√° para 'Functions' > 'webhook'")
    print(f"   4. Verifique se h√° logs de execu√ß√£o")
    print(f"   5. Se n√£o h√° logs, o webhook n√£o est√° sendo chamado")
    
    print(f"\nüîß SOLU√á√ÉO R√ÅPIDA:")
    print(f"   1. Verifique se o webhook est√° configurado no Z-API:")
    print(f"      - URL: https://chatbot-clincia.vercel.app/webhook")
    print(f"      - Evento: 'Ao receber'")
    print(f"   2. Ative 'Notificar as enviadas por mim tamb√©m'")
    print(f"   3. Teste novamente enviando 'oi'")

if __name__ == "__main__":
    verificar_webhook_logs() 